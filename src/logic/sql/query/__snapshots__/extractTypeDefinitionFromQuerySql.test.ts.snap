// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`extractTypeDefinitionFromQuerySql should be able to determine types accurately an example of selecting columns a single table by id 1`] = `
TypeDefinitionOfQuery {
  "inputVariables": Array [
    TypeDefinitionOfQueryInputVariable {
      "name": "id",
      "typeReference": TypeDefinitionReference {
        "functionReferencePath": null,
        "tableReferencePath": "i.id",
      },
    },
  ],
  "selectExpressions": Array [
    TypeDefinitionOfQuerySelectExpression {
      "alias": "id",
      "typeReference": TypeDefinitionReference {
        "functionReferencePath": null,
        "tableReferencePath": "i.id",
      },
    },
    TypeDefinitionOfQuerySelectExpression {
      "alias": "url",
      "typeReference": TypeDefinitionReference {
        "functionReferencePath": null,
        "tableReferencePath": "i.url",
      },
    },
    TypeDefinitionOfQuerySelectExpression {
      "alias": "caption",
      "typeReference": TypeDefinitionReference {
        "functionReferencePath": null,
        "tableReferencePath": "i.caption",
      },
    },
    TypeDefinitionOfQuerySelectExpression {
      "alias": "alt_text",
      "typeReference": TypeDefinitionReference {
        "functionReferencePath": null,
        "tableReferencePath": "i.alt_text",
      },
    },
    TypeDefinitionOfQuerySelectExpression {
      "alias": "credit",
      "typeReference": TypeDefinitionReference {
        "functionReferencePath": null,
        "tableReferencePath": "i.credit",
      },
    },
  ],
  "tableReferences": Array [
    TypeDefinitionOfQueryTableReference {
      "alias": "i",
      "tableName": "image",
    },
  ],
}
`;

exports[`extractTypeDefinitionFromQuerySql should be able to determine types accurately an upsert query 1`] = `
TypeDefinitionOfQuery {
  "inputVariables": Array [
    TypeDefinitionOfQueryInputVariable {
      "name": "suggestionSource",
      "typeReference": TypeDefinitionReference {
        "functionReferencePath": "upsert_suggestion.input.0",
        "tableReferencePath": null,
      },
    },
    TypeDefinitionOfQueryInputVariable {
      "name": "externalId",
      "typeReference": TypeDefinitionReference {
        "functionReferencePath": "upsert_suggestion.input.1",
        "tableReferencePath": null,
      },
    },
    TypeDefinitionOfQueryInputVariable {
      "name": "suggestedIdeaId",
      "typeReference": TypeDefinitionReference {
        "functionReferencePath": "upsert_suggestion.input.2",
        "tableReferencePath": null,
      },
    },
    TypeDefinitionOfQueryInputVariable {
      "name": "status",
      "typeReference": TypeDefinitionReference {
        "functionReferencePath": "upsert_suggestion.input.3",
        "tableReferencePath": null,
      },
    },
    TypeDefinitionOfQueryInputVariable {
      "name": "result",
      "typeReference": TypeDefinitionReference {
        "functionReferencePath": "upsert_suggestion.input.4",
        "tableReferencePath": null,
      },
    },
  ],
  "selectExpressions": Array [
    TypeDefinitionOfQuerySelectExpression {
      "alias": "id",
      "typeReference": TypeDefinitionReference {
        "functionReferencePath": "upsert_suggestion.output",
        "tableReferencePath": null,
      },
    },
  ],
  "tableReferences": Array [],
}
`;

exports[`extractTypeDefinitionFromQuerySql should be able to determine types accurately for this example that selects both from tables and functions 1`] = `
TypeDefinitionOfQuery {
  "inputVariables": Array [
    TypeDefinitionOfQueryInputVariable {
      "name": "lastName",
      "typeReference": TypeDefinitionReference {
        "functionReferencePath": null,
        "tableReferencePath": "u.last_name",
      },
    },
  ],
  "selectExpressions": Array [
    TypeDefinitionOfQuerySelectExpression {
      "alias": "id",
      "typeReference": TypeDefinitionReference {
        "functionReferencePath": null,
        "tableReferencePath": "u.id",
      },
    },
    TypeDefinitionOfQuerySelectExpression {
      "alias": "full_name",
      "typeReference": TypeDefinitionReference {
        "functionReferencePath": "concat.output",
        "tableReferencePath": null,
      },
    },
    TypeDefinitionOfQuerySelectExpression {
      "alias": "age",
      "typeReference": TypeDefinitionReference {
        "functionReferencePath": null,
        "tableReferencePath": "u.age",
      },
    },
    TypeDefinitionOfQuerySelectExpression {
      "alias": "phone_number",
      "typeReference": TypeDefinitionReference {
        "functionReferencePath": null,
        "tableReferencePath": "p.number",
      },
    },
  ],
  "tableReferences": Array [
    TypeDefinitionOfQueryTableReference {
      "alias": "u",
      "tableName": "user",
    },
    TypeDefinitionOfQueryTableReference {
      "alias": "p",
      "tableName": "phone",
    },
  ],
}
`;

exports[`extractTypeDefinitionFromQuerySql should be able to determine types accurately when selecting columns from multiple tables, no input variables 1`] = `
TypeDefinitionOfQuery {
  "inputVariables": Array [],
  "selectExpressions": Array [
    TypeDefinitionOfQuerySelectExpression {
      "alias": "id",
      "typeReference": TypeDefinitionReference {
        "functionReferencePath": null,
        "tableReferencePath": "s.id",
      },
    },
    TypeDefinitionOfQuerySelectExpression {
      "alias": "uuid",
      "typeReference": TypeDefinitionReference {
        "functionReferencePath": null,
        "tableReferencePath": "s.uuid",
      },
    },
    TypeDefinitionOfQuerySelectExpression {
      "alias": "suggestion_source",
      "typeReference": TypeDefinitionReference {
        "functionReferencePath": null,
        "tableReferencePath": "s.suggestion_source",
      },
    },
    TypeDefinitionOfQuerySelectExpression {
      "alias": "external_id",
      "typeReference": TypeDefinitionReference {
        "functionReferencePath": null,
        "tableReferencePath": "s.external_id",
      },
    },
    TypeDefinitionOfQuerySelectExpression {
      "alias": "suggested_idea_id",
      "typeReference": TypeDefinitionReference {
        "functionReferencePath": null,
        "tableReferencePath": "s.suggested_idea_id",
      },
    },
    TypeDefinitionOfQuerySelectExpression {
      "alias": "resultant_curated_idea_id",
      "typeReference": TypeDefinitionReference {
        "functionReferencePath": null,
        "tableReferencePath": "s.resultant_curated_idea_id",
      },
    },
    TypeDefinitionOfQuerySelectExpression {
      "alias": "status",
      "typeReference": TypeDefinitionReference {
        "functionReferencePath": null,
        "tableReferencePath": "v.status",
      },
    },
    TypeDefinitionOfQuerySelectExpression {
      "alias": "result",
      "typeReference": TypeDefinitionReference {
        "functionReferencePath": null,
        "tableReferencePath": "v.result",
      },
    },
    TypeDefinitionOfQuerySelectExpression {
      "alias": "created_at",
      "typeReference": TypeDefinitionReference {
        "functionReferencePath": null,
        "tableReferencePath": "s.created_at",
      },
    },
    TypeDefinitionOfQuerySelectExpression {
      "alias": "effective_at",
      "typeReference": TypeDefinitionReference {
        "functionReferencePath": null,
        "tableReferencePath": "v.effective_at",
      },
    },
    TypeDefinitionOfQuerySelectExpression {
      "alias": "updated_at",
      "typeReference": TypeDefinitionReference {
        "functionReferencePath": null,
        "tableReferencePath": "v.created_at",
      },
    },
  ],
  "tableReferences": Array [
    TypeDefinitionOfQueryTableReference {
      "alias": "s",
      "tableName": "suggestion",
    },
    TypeDefinitionOfQueryTableReference {
      "alias": "c",
      "tableName": "suggestion_cvp",
    },
    TypeDefinitionOfQueryTableReference {
      "alias": "v",
      "tableName": "suggestion_version",
    },
  ],
}
`;
