// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`extractTypeDefinitionFromTableSql mysql should be able to extract types in this example 1`] = `
TypeDefinitionOfResourceTable {
  "columns": [
    TypeDefinitionOfResourceColumn {
      "name": "id",
      "type": [
        "number",
      ],
    },
    TypeDefinitionOfResourceColumn {
      "name": "uuid",
      "type": [
        "string",
      ],
    },
    TypeDefinitionOfResourceColumn {
      "name": "created_at",
      "type": [
        "Date",
      ],
    },
    TypeDefinitionOfResourceColumn {
      "name": "url",
      "type": [
        "string",
      ],
    },
    TypeDefinitionOfResourceColumn {
      "name": "caption",
      "type": [
        "string",
        "null",
      ],
    },
    TypeDefinitionOfResourceColumn {
      "name": "credit",
      "type": [
        "string",
        "null",
      ],
    },
    TypeDefinitionOfResourceColumn {
      "name": "alt_text",
      "type": [
        "string",
        "null",
      ],
    },
  ],
  "name": "image",
}
`;

exports[`extractTypeDefinitionFromTableSql mysql should be able to extract types in this other example 1`] = `
TypeDefinitionOfResourceTable {
  "columns": [
    TypeDefinitionOfResourceColumn {
      "name": "id",
      "type": [
        "number",
      ],
    },
    TypeDefinitionOfResourceColumn {
      "name": "suggestion_id",
      "type": [
        "number",
      ],
    },
    TypeDefinitionOfResourceColumn {
      "name": "effective_at",
      "type": [
        "Date",
      ],
    },
    TypeDefinitionOfResourceColumn {
      "name": "created_at",
      "type": [
        "Date",
      ],
    },
    TypeDefinitionOfResourceColumn {
      "name": "status",
      "type": [
        "string",
      ],
    },
  ],
  "name": "suggestion_version",
}
`;

exports[`extractTypeDefinitionFromTableSql postgres should be able to extract types in this example 1`] = `
TypeDefinitionOfResourceTable {
  "columns": [
    TypeDefinitionOfResourceColumn {
      "name": "id",
      "type": [
        "number",
      ],
    },
    TypeDefinitionOfResourceColumn {
      "name": "uuid",
      "type": [
        "string",
      ],
    },
    TypeDefinitionOfResourceColumn {
      "name": "created_at",
      "type": [
        "Date",
      ],
    },
    TypeDefinitionOfResourceColumn {
      "name": "url",
      "type": [
        "string",
      ],
    },
    TypeDefinitionOfResourceColumn {
      "name": "description",
      "type": [
        "string",
        "null",
      ],
    },
  ],
  "name": "photo",
}
`;

exports[`extractTypeDefinitionFromTableSql postgres should be able to extract types in this other example 1`] = `
TypeDefinitionOfResourceTable {
  "columns": [
    TypeDefinitionOfResourceColumn {
      "name": "id",
      "type": [
        "number",
      ],
    },
    TypeDefinitionOfResourceColumn {
      "name": "job_id",
      "type": [
        "number",
      ],
    },
    TypeDefinitionOfResourceColumn {
      "name": "effective_at",
      "type": [
        "Date",
      ],
    },
    TypeDefinitionOfResourceColumn {
      "name": "created_at",
      "type": [
        "Date",
      ],
    },
    TypeDefinitionOfResourceColumn {
      "name": "location_id",
      "type": [
        "number",
      ],
    },
    TypeDefinitionOfResourceColumn {
      "name": "photo_ids_hash",
      "type": [
        "Buffer",
      ],
    },
  ],
  "name": "job_version",
}
`;

exports[`extractTypeDefinitionFromTableSql postgres should be able to extract types in this other example, having a check constraint with nested parens 1`] = `
TypeDefinitionOfResourceTable {
  "columns": [
    TypeDefinitionOfResourceColumn {
      "name": "id",
      "type": [
        "number",
      ],
    },
    TypeDefinitionOfResourceColumn {
      "name": "uuid",
      "type": [
        "string",
      ],
    },
    TypeDefinitionOfResourceColumn {
      "name": "created_at",
      "type": [
        "Date",
      ],
    },
    TypeDefinitionOfResourceColumn {
      "name": "status",
      "type": [
        "string",
      ],
    },
  ],
  "name": "job",
}
`;
